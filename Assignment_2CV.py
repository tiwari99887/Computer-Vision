# -*- coding: utf-8 -*-
"""Assenment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PcXUnEADGnPVE9fxoZAfEhSOF7g9IbaJ
"""

pip install colormap

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
from sklearn import datasets
from sklearn.neighbors import KNeighborsClassifier

"""## **Load iris dataset**"""

iris = datasets.load_iris()

iris

X = iris.data[:, :2]
y = iris.target

"""# **Create** **color** **maps**"""

cmap_light = ListedColormap(['#FFAAAA', '#AAFFAA', '#AAAAFF'])
cmap_bold = ListedColormap(['#FF0000', '#00FF00', '#0000FF'])

"""**# Define KNN classifier for k=1 and k=5**"""

clf1 = KNeighborsClassifier(n_neighbors=1)
clf1.fit(X, y)

clf5 = KNeighborsClassifier(n_neighbors=5)
clf5.fit(X, y)

"""## **# Plot the decision boundary**"""

x_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1
y_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1
xx, yy = np.meshgrid(np.arange(x_min, x_max, 0.02),
                     np.arange(y_min, y_max, 0.02))

Z1 = clf1.predict(np.c_[xx.ravel(), yy.ravel()])
Z1 = Z1.reshape(xx.shape)

Z5 = clf5.predict(np.c_[xx.ravel(), yy.ravel()])
Z5 = Z5.reshape(xx.shape)

plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
plt.pcolormesh(xx, yy, Z1, cmap=cmap_light)
plt.scatter(X[:, 0], X[:, 1], c=y, cmap=cmap_bold, edgecolor='k', s=20)
plt.title("k-NN decision boundary (k=1)")
plt.xlabel('Sepal length')
plt.ylabel('Sepal width')

plt.subplot(1, 2, 2)
plt.pcolormesh(xx, yy, Z5, cmap=cmap_light)
plt.scatter(X[:, 0], X[:, 1], c=y, cmap=cmap_bold, edgecolor='k', s=20)
plt.title("k-NN decision boundary (k=5)")
plt.xlabel('Sepal length')
plt.ylabel('Sepal width')

plt.tight_layout()
plt.show()